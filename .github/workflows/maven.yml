# This workflow automatically tests new commits and pull requests as they come in.
# Note that this does not upload any artifacts, you will need to compile mcMMO manually
# if you wish to create the actual jar.
name: Compile and test

on: [push]
  # We run our tests whenever the pom or a source file was touched.
  # There is no need to run Maven when only the changelog was touched.
  # We may also want to re-run this workflow when the workflow file itself
  # was updated too.

  # Whenever someone submits a new pull request which modified the pom or a source file,
  # we want to ensure it compiles successfully and that all tests will pass.

jobs:
  compile:
    name: Maven compiler
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/mcMMO/mcMMO/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'optimizing-ci-builds'

    # 1. Check out the current working tree
    - run: touch starting_compile_Checkoutrepository_31
    - run: rm starting_compile_Checkoutrepository_31
    - name: Checkout repository
      uses: actions/checkout@v2

    # 2. Setup Java 17 JDK (Adopt)
    - run: touch starting_compile_Java17setup_35
    - run: rm starting_compile_Java17setup_35
    - name: Java 17 setup
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-package: jdk
        java-version: '17'

    # 3. Setup local Maven package cache to speed up building
    - run: touch starting_compile_CacheMavenpackages_43
    - run: rm starting_compile_CacheMavenpackages_43
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # 4. Build via Maven 
    - run: touch starting_compile_BuildviaMaven_51
    - run: rm starting_compile_BuildviaMaven_51
    - name: Build via Maven
      run: mvn verify -B --file pom.xml
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: Check script file exists and execute
      if: always()
      id: check_files
      uses: andstor/file-existence-action@v1
      with:
        files: .github/workflows/script.py
    - name: File exists
      if: steps.check_files.outputs.files_exists == 'true'
      run: |
        python .github/workflows/script.py
    - name: Checkout to destination CI-analyzes repo
      uses: actions/checkout@v3
      if: always()
      with:
        path: mcMMO
        ref: '1678921743-5a20a5b'
        repository: 'UT-SE-Research/ci-analyzes'
        token: '${{ secrets.API_TOKEN_GITHUB }}'
        persist-credentials: true
    - name: Copy files to push to another directory
      if: steps.check_files.outputs.files_exists == 'true'
      run: |
        mkdir -p mcMMO/mcMMO/.github/workflows/maven/compile
        cp -rvT optimizing-ci-builds-ci-analysis mcMMO/mcMMO/.github/workflows/maven/compile
    - name: Pushes analysis to another repository
      if: steps.check_files.outputs.files_exists == 'true'
      working-directory: mcMMO
      run: |
        commit_message=$GITHUB_REPOSITORY@$GITHUB_WORKFLOW_SHA
        git config --global user.name 'UT-SE-Research'
        git config --global user.email '${{ secrets.EMAIL }}'
        git add .
        git commit -m $commit_message
        while ! git push -f origin 1678921743-5a20a5b; do
          git pull --rebase origin 1678921743-5a20a5b
          sleep $((RANDOM % 5 + 1))
        done
        echo "Job ID: ${GITHUB_JOB##*_}"
